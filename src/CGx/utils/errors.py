import numpy  as np
import pandas as pd

# Define variable names
vars = ['Na_i', 'Na_e', 'K_i', 'K_e', 'Cl_i', 'Cl_e', 'phi_i', 'phi_e']

## 2D L2 error norms
data_2D = np.array([
                [0.00901073402128234, 0.0023339935502871972, 0.0005882726326089442, 0.00014694428281715626, 3.6771513073070695e-05],
                [0.031204752571547766, 0.008082930868950062, 0.002037262650989265, 0.000508870841996577, 0.0001257084587271984],
                [0.00900205288154319, 0.0023321107352221207, 0.0005878311072466451, 0.00014683661121181747, 3.6275185147001105e-05],
                [0.010398988757595273, 0.002693769200174614, 0.0006789562744643979, 0.00016959104955482663, 4.1894787274231886e-05],
                [0.018012781610371623, 0.004666101255209068, 0.0011761022248566386, 0.0002937802938437501, 7.257652721500289e-05],
                [0.041603738561854245, 0.010776698866192116, 0.0027162184250172946, 0.0006784617055205049, 0.00016760319277215832],
                [0.0925829489389946, 0.02475728789294459, 0.0062963114451772976, 0.0015807071904532471, 0.0003954393706490666],
                [0.06130402545841192, 0.016651052901881527, 0.00425313689702738, 0.0010691441588083642, 0.0002677078673553347]
            ]).T
## 3D L2 error norms
data_3D = np.array([
                [0.006696696268423694, 0.0017887592187751772, 0.00045449546089368006, 0.00011388430384310379, 2.828137545450862e-05],
                [0.03545971349117606, 0.009469839026924316, 0.0024059416956314053, 0.0006028226133204843, 0.00014969304708653826],
                [0.0067008763994408655, 0.0017899729274002977, 0.00045480417916292175, 0.00011396162897019657, 2.8300585814705867e-05],
                [0.011820767425187617, 0.0031568340219538396, 0.0008020360727853242, 0.00020095475667407947, 4.9901129754905946e-05],
                [0.01339756986302902, 0.0035787297426306875, 0.0009092985387635402, 0.00022784551865369447, 5.658184352123676e-05],
                [0.047280479253960374, 0.012626672131834112, 0.003207977429677548, 0.0008037772536968105, 0.00019959414442763504],
                [0.06822405421827074, 0.01932293293267229, 0.0049947086831696645, 0.0012593417059151134, 0.00031550071245278326],
                [0.06740032756597, 0.01960198734939858, 0.005110742558010626, 0.0012916167127701565, 0.00032378829494624634]
            ]).T

# Create dataframes with L2 error norms
df_errors_2D = pd.DataFrame(data=data_2D, columns=vars)
df_errors_3D = pd.DataFrame(data=data_3D, columns=vars)

# Create dataframes for the convergence rates
df_rates_2D = df_errors_2D.copy(deep=True)
df_rates_2D.drop(df_rates_2D.tail(1).index, inplace=True) # Drop one row since number of rates is number of norms less one

df_rates_3D = df_errors_3D.copy(deep=True)
df_rates_3D.drop(df_rates_3D.tail(1).index, inplace=True) # Drop one row since number of rates is number of norms less one

for col in df_errors_2D.columns:
    df_rates_2D[col] = -(1/np.log(2)) * np.log(df_errors_2D[col][1:].values / df_errors_2D[col][:-1].values)
    df_rates_3D[col] = -(1/np.log(2)) * np.log(df_errors_3D[col][1:].values / df_errors_3D[col][:-1].values)

print("2D L2 erorr norm rates:")
print(df_rates_2D)
print("\n3D L2 error norm rates:")
print(df_rates_3D)